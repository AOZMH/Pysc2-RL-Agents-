import sys
sys.path.append(r'C:\Users\dell\Anaconda3\envs\pytorch\Lib\site-packages')
sys.path.append(r'C:\Users\dell\Anaconda3\Lib\site-packages')

import matplotlib.pyplot as plt
import numpy as np
from scipy import interpolate


def make_plot(log_dir):

    # x, y points to be interpolated
    xs, max_scs, min_scs, avg_scs = [],[],[],[]

    # raw data generated by training process
    with open(log_dir) as fin:
        for line in fin:
            epi, max_sc, min_sc, avg_sc = list(map(float, line.strip().split('\t')))
            xs.append(epi)
            max_scs.append(max_sc)
            min_scs.append(min_sc)
            avg_scs.append(avg_sc)
    #proc = np.array
    #xs, max_scs, min_scs, avg_scs = map(proc, [xs, max_scs, min_scs, avg_scs])

    # interpolation function
    func_max = interpolate.interp1d(xs, max_scs, kind='cubic')
    func_min = interpolate.interp1d(xs, min_scs, kind='cubic')
    func_avg = interpolate.interp1d(xs, avg_scs, kind='cubic')

    # interpolated new x-y points
    x_new = np.arange(min(xs), max(xs), 1.)
    max_new = func_max(x_new)
    min_new = func_min(x_new)
    avg_new = func_avg(x_new)

    # draw interpolated plots
    plt.plot(x_new, max_new, color='red', linewidth=2.0, linestyle='--')
    plt.plot(x_new, min_new, color='blue', linewidth=3.0, linestyle='-.')
    plt.plot(x_new, avg_new, color='orange', linewidth=3.0, linestyle='-')

    plt.xlabel("Training episode")
    plt.ylabel("Score")
    plt.title("Score flunctuation throughout training episodes")
    plt.ylim(0,35)
    plt.show()
    

if __name__ == "__main__":
    make_plot(log_dir = './log/score_log/MoveToBeacon/fcn/log.dat')